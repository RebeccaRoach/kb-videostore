{"version":3,"sources":["components/Nav.js","components/Home.js","components/Customers.js","components/Library.js","components/Search.js","components/Rentals.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","session","useContext","SessionContext","className","to","selectedCustomer","name","selectedMovie","title","Home","class","playsinline","autoplay","muted","loop","src","type","Customers","useState","customers","setCustomers","sessionContext","useEffect","axios","get","process","API_BASE_URL","then","response","data","catch","alert","map","customer","id","movies_checked_out_count","onClick","setSelectedCustomer","Library","library","setLibrary","searchFieldQuery","setSearchFieldQuery","results","filter","movie","toLowerCase","includes","placeholder","onChange","e","target","value","data-toggle","data-placement","overview","image_url","alt","release_date","setSelectedMovie","Search","result","setResult","handleSearch","a","preventDefault","undefined","addMovie","movieData","post","store","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration","error","Rentals","rentMovie","customer_id","due_date","Date","now","returnMovie","React","createContext","App","Provider","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5781f6cd.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport {Link} from 'react-router-dom'\nimport {SessionContext} from '../App'\n\nconst Nav = () => {\n\n  const session = useContext(SessionContext);\n\n  return (\n    <nav className=\"nav-style\">\n      <ul className=\"nav-ul\">\n        <Link to='/'>\n          <li className=\"navbar-brand\">KB Videos</li>\n        </Link>\n\n        <Link to='/'>\n          <li className=\"nav-links\">Home</li>\n        </Link>\n\n       <Link to='/search'>\n          <li className=\"nav-links\">Search</li>\n        </Link>\n\n        <Link to='/library'>\n          <li className=\"nav-links\">Library</li>\n        </Link>\n      \n        <Link to='/customers'>\n          <li className=\"nav-links\">Customers</li>\n        </Link>\n\n        <Link to='/rentals'>\n          <li className=\"nav-links\">Rentals</li>\n        </Link>\n      </ul>\n\n      <h4 className=\"selected-context\">{session.selectedCustomer && session.selectedCustomer.name}</h4>\n      <h4 className=\"selected-context\">{session.selectedMovie && session.selectedMovie.title}</h4>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\n// import './App.css';\n\nconst Home = () => {\n  return (\n    <div className=\"App\">\n\n      {/* HEADER */}\n      <header>\n        <div class=\"overlay\"></div>\n        <video playsinline=\"playsinline\" autoplay=\"autoplay\" muted=\"muted\" loop=\"loop\">\n          <source src=\"https://storage.googleapis.com/coverr-main/mp4/Mt_Baker.mp4\" type=\"video/mp4\" />\n        </video>\n        <div class=\"container h-100\">\n          <div class=\"d-flex h-100 text-center align-items-center\">\n            <div class=\"w-100 text-white\">\n              <h1 class=\"display-3\">Get the Popcorn Ready</h1>\n              <p class=\"lead mb-0\">At KB Videos, it's always movie time.</p>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* FOOTER */}\n      <div class=\"mt-5 pt-5 pb-5 footer\">\n        <div class=\"container\">\n          <div class=\"row mt-5\">\n            <div class=\"col copyright\">\n              <h6><i>a Time and Space production</i></h6>\n              <p>Directed by Kate && Becca</p>\n              <p><small>© 2020. All Rights Reserved.</small></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport {SessionContext} from \"../App\"\n\nconst Customers = () => {\n\n  const [customers, setCustomers] = useState([]);\n  const sessionContext = useContext(SessionContext)\n\n  useEffect(() => {\n    axios.get(`${process.env.API_BASE_URL}customers`)\n      .then((response) => {\n        setCustomers(response.data);\n      })\n      .catch(()=> {\n        alert(\"Failed to fectch customers\");\n      })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <table className=\"table\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Movies checked out</th>\n            <th>Select a Customer</th>\n          </tr>\n        </thead>\n        <tbody>\n          {customers.map((customer) => {\n            return (\n              <tr>\n                <td>\n                  {customer.id}\n                </td>\n                <td>\n                  {customer.name}\n                </td>\n                <td>\n                  {customer.movies_checked_out_count}\n                </td>\n                <td>\n                <button onClick={()=> sessionContext.setSelectedCustomer(customer)} className=\"add-btn\">Select</button>\n                </td>\n              </tr>\n            )\n          }\n          )}\n\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Customers;\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { SessionContext } from \"../App\";\n\nconst Library = () => {\n\n  const [library, setLibrary] = useState([]);\n  const sessionContext = useContext(SessionContext);\n\n  const [searchFieldQuery, setSearchFieldQuery] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`${process.env.API_BASE_URL}movies`)\n      .then((response) => {\n        setLibrary(response.data);\n      })\n      .catch(() => {\n        alert(\"Failed to fetch movies\")\n      })\n  }, [])\n\n  // Filter library if a user has input any search parameters\n  const results = searchFieldQuery ?\n    library.filter(movie => movie.title.toLowerCase().includes(searchFieldQuery.toLowerCase())) :\n    library\n\n  return (\n    <div className=\"jumbotron\">\n      <h1 class=\"display-3\">LIBRARY</h1>\n      <p class=\"lead\">KB Videos Library</p>\n\n      <input\n        className=\"search-input\"\n        placeholder=\"Enter a movie title\"\n        name=\"search\"\n        onChange={(e) => setSearchFieldQuery(e.target.value)}\n      />\n\n      <hr class=\"my-2\"></hr>\n      <div className=\"movie-cards-container\">\n        {results.map(movie =>\n          <div>\n            <div className=\"card promoting-card card-style\">\n              <div className=\"card-body d-flex flex-row\"\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title={movie.overview}\n              >\n                <div>\n                  <div className=\"view overlay\">\n                    <img src={movie.image_url} className=\"movie-img\" alt=\"movie cover image\"></img>\n                  </div>\n                  <h4 className=\"card-title font-weight-bold mb-2\">{movie.title}</h4>\n                  <p className=\"card-text\">Release: {movie.release_date}</p>\n                </div>\n              </div>\n              <button className=\"add-btn\" onClick={() => sessionContext.setSelectedMovie(movie)}>Select</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Library;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { store } from 'react-notifications-component';\n\nconst Search = () => {\n\n  const notificationMessage = () => {\n    store.addNotification({\n      title: \"Success!\",\n      message: \"Selected movie has been added to your library\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1500,\n      }\n    });\n  }\n\n  const errorNotificationMessage = () => {\n    store.addNotification({\n      title: \"Warning!\",\n      message: \"Selected movie was already added to your library\",\n      type: \"warning\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1500,\n      }\n    });\n  }\n\n  const [searchFieldQuery, setSearchFieldQuery] = useState(\"\");\n\n  const [result, setResult] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n\n    if (searchFieldQuery !== \"\" && searchFieldQuery !== undefined && searchFieldQuery !== null) {\n      await axios.get(`${process.env.API_BASE_URL}movies?query=${searchFieldQuery}`)\n        .then((response) => {\n          setResult(response.data);\n        })\n        .catch(() => {\n          // THIS WAS TRIGGERING WHEN STYLE TAG IN MOVIE CARD WASNT RIGHT??\n          alert(\"Requested movie was not found\")\n        })\n    }\n  }\n\n  const addMovie = (movieData) => {\n    axios.post(`${process.env.API_BASE_URL}movies`, movieData)\n      .then((response) => {\n        notificationMessage();\n      })\n      .catch((error) => {\n        errorNotificationMessage();\n      })\n  }\n\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-3\">SEARCH</h1>\n      <p className=\"lead\">Find a video to add to Library</p>\n      <hr class=\"my-2\"></hr>\n      <input\n        className=\"search-input\"\n        placeholder=\"Enter a movie title\"\n        name=\"search\"\n        onChange={(e) => setSearchFieldQuery(e.target.value)}\n        value={searchFieldQuery}\n      />\n\n      <button className=\"pizazz-btn\" onClick={handleSearch}>Search</button>\n\n      <div className=\"movie-cards-container\">\n        {result.map(movieData =>\n          <div>\n            <div class=\"card promoting-card card-style\">\n              <div class=\"card-body d-flex flex-row\"\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title={movieData.overview}\n              >\n                <div>\n                  <div class=\"view overlay\">\n                    <img src={movieData.image_url} class=\"movie-img\" alt=\"movie cover image\"></img>\n                  </div>\n                  <h4 class=\"card-title font-weight-bold mb-2\">{movieData.title}</h4>\n                  <p class=\"card-text\">Release: {movieData.release_date}</p>\n                </div>\n              </div>\n              <button className=\"add-btn\" onClick={() => addMovie(movieData)}>Add to Library</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext }  from 'react';\nimport axios from 'axios';\nimport { SessionContext } from \"../App\";\nimport { store } from 'react-notifications-component';\n\nfunction Rentals() {\n\n  const sessionContext = useContext(SessionContext);\n\n  const rentalSuccessMessage = () => {\n    store.addNotification({\n      title: \"Success!\",\n      message: \"Rental has been created!\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1500,\n      }\n    });\n  }\n\n  const rentalErrorMessage = () => {\n    store.addNotification({\n      title: \"Warning\",\n      message: \"Could not create a rental. Not enough inventory.\",\n      type: \"warning\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1500,\n      }\n    });\n  }\n\n  const returnSuccessMessage = () => {\n    store.addNotification({\n      title: \"Success!\",\n      message: \"Rental has been returned! Thank you!\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1500,\n      }\n    });\n  }\n\n  const returnErrorMessage = () => {\n    store.addNotification({\n      title: \"Warning\",\n      message: \"Oh no! Could not return the movie for some reason!\",\n      type: \"warning\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1500,\n      }\n    });\n  }\n\n  const rentMovie = () => {\n    if (sessionContext.selectedMovie !== undefined && sessionContext.selectedCustomer !== undefined) {\n      const movie = sessionContext.selectedMovie;\n      const customer = sessionContext.selectedCustomer;\n\n      axios.post(`${process.env.API_BASE_URL}rentals/${movie.title}/check-out`, {\n        customer_id: customer.id,\n        // sets due date to be one week from time of rental\n        due_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000)\n      })\n        .then((response) => {\n          rentalSuccessMessage();\n          // clear sessionContext after rental made\n          sessionContext.setSelectedCustomer(undefined);\n          sessionContext.setSelectedMovie(undefined);\n        })\n        .catch((error) => {\n          rentalErrorMessage();\n        })\n    }\n  }\n\n  const returnMovie = () => {\n    if (sessionContext.selectedMovie !== undefined && sessionContext.selectedCustomer !== undefined) {\n      const movie = sessionContext.selectedMovie;\n      const customer = sessionContext.selectedCustomer;\n\n      axios.post(`${process.env.API_BASE_URL}rentals/${movie.title}/return`, {\n        customer_id: customer.id,\n      })\n        .then(() => {\n          returnSuccessMessage();\n          // clear sessionContext after rental returned\n          sessionContext.setSelectedCustomer(undefined);\n          sessionContext.setSelectedMovie(undefined);\n        })\n        .catch(() => {\n          returnErrorMessage();\n        })\n    }\n  }\n\n  return (\n    <div className=\"jumbotron\">\n      <h1 class=\"display-3\">RENTALS</h1>\n      <p class=\"lead\">Select a customer and a movie then do a checkout-out or check-in</p>\n      <hr class=\"my-2\"></hr>\n      \n      <p>Selected Movie: <strong>{sessionContext.selectedMovie === undefined ? \"no movie selected\" : sessionContext.selectedMovie.title}</strong></p>\n      <p>Selected Customer: <strong>{sessionContext.selectedCustomer === undefined ? \"no customer selected\" : sessionContext.selectedCustomer.name}</strong></p>\n     \n      <div className=\"rental-buttons-container\">\n        <button onClick={() => rentMovie()} className=\"pizazz-btn\">\n          Rent a Movie\n        </button>\n        <button onClick={() => returnMovie()} className=\"pizazz-btn\">\n          Return a Movie\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Rentals;\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Nav from './components/Nav.js'\nimport Home from './components/Home.js'\nimport Customers from './components/Customers.js'\nimport Library from './components/Library.js'\nimport Search from './components/Search.js'\nimport Rentals from './components/Rentals.js'\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\n// so we can consume the context anywhere:\nexport const SessionContext = React.createContext();\n\nconst App = () => {\n\n  const [selectedCustomer, setSelectedCustomer] = useState(undefined);\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\n\n  return (\n    <SessionContext.Provider value={{\n      selectedCustomer,\n      selectedMovie,\n      setSelectedCustomer,\n      setSelectedMovie\n    }}>\n      <Router>\n        <div className=\"App\">\n          <ReactNotification />\n          <Nav />\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/library' component={Library} />\n            <Route path='/search' component={Search} />\n            <Route path='/customers' component={Customers} />\n            <Route path='/rentals' component={Rentals} />\n          </Switch>\n        </div>\n      </Router>\n    </SessionContext.Provider>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}